{"version":3,"sources":["components/TodoList/TodoListSlice.js","components/Todo/index.js","redux/selectors.js","components/TodoList/index.js","components/Filters/FiltersSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["createSlice","name","initialState","id","completed","priority","reducers","addTodo","state","action","push","payload","toggleTodoStatus","currentTodo","find","todo","priorityColorMapping","High","Medium","Low","Todo","prioriry","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","todoListSlice","actions","color","margin","todosRemainingSelector","createSelector","todoList","filters","status","search","searchText","filter","length","includes","TodoList","setTodo","setPriority","useSelector","height","span","overflowY","map","t","Group","display","compact","value","e","target","defaultValue","Option","label","onClick","uuidv4","type","searchFilterChange","statusFilterChange","priorityChange","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriority","setFilterPriority","Paragraph","fontWeight","marginTop","placeholder","filtersSlice","sm","mode","allowClear","width","priorityFilterChange","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","FiltersSlice","ReactDOM","render","document","getElementById"],"mappings":"oVA2BeA,cAAY,CACvBC,KAAM,WACNC,aAAc,CACV,CAAEC,GAAI,EAAGF,KAAM,UAAWG,WAAW,EAAOC,SAAU,UACtD,CAAEF,GAAI,EAAGF,KAAM,WAAYG,WAAW,EAAMC,SAAU,QAE1DC,SAAU,CACNC,QAAS,SAACC,EAAOC,GAEbD,EAAME,KAAKD,EAAOE,UAEtBC,iBAAkB,SAACJ,EAAOC,GACtB,IAAMI,EAAcL,EAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAKZ,KAAOM,EAAOE,WACtDE,IACAA,EAAYT,WAAaS,EAAYT,e,OCpC/CY,EAAuB,CAC3BC,KAAM,MACNC,OAAQ,OACRC,IAAK,QAGQ,SAASC,EAAT,GAAkD,IAAlCnB,EAAiC,EAAjCA,KAAMoB,EAA2B,EAA3BA,SAAUjB,EAAiB,EAAjBA,UAAWD,EAAM,EAANA,GAAM,EAChCmB,mBAASlB,GADuB,mBACvDmB,EADuD,KAC9CC,EAD8C,KAExDC,EAAWC,cAMjB,OACE,eAAC,IAAD,CACEC,QAAQ,gBACRC,MAAK,aACHC,aAAc,GACVN,EAAU,CAAEO,QAAS,GAAKC,eAAgB,gBAAmB,IAJrE,UAOE,cAAC,IAAD,CAAUR,QAASA,EAASS,SAbT,WACrBR,GAAYD,GACZE,EAASQ,EAAcC,QAAQtB,iBAAiBT,KAW9C,SACGF,IAEH,cAAC,IAAD,CAAKkC,MAAOnB,EAAqBK,GAAWO,MAAO,CAAEQ,OAAQ,GAA7D,SACGf,O,YCvBIgB,EAAyBC,aANN,SAAC9B,GAAD,OAAWA,EAAM+B,YACb,SAAC/B,GAAD,OAAWA,EAAMgC,QAAQC,UAC3B,SAACjC,GAAD,OAAWA,EAAMgC,QAAQE,UACrB,SAAClC,GAAD,OAAWA,EAAMgC,QAAQnC,YAG0E,SAACkC,EAAUE,EAAQE,EAAYtC,GACpK,OAAOkC,EAASK,QAAO,SAAC7B,GACpB,MAAe,QAAX0B,EACOpC,EAASwC,OACV9B,EAAKd,KAAK6C,SAASH,IAAetC,EAASyC,SAAS/B,EAAKV,UACzDU,EAAKd,KAAK6C,SAASH,GAEtB5B,EAAKd,KAAK6C,SAASH,KACP,cAAXF,EACE1B,EAAKX,WACJW,EAAKX,cACRC,EAASwC,QACPxC,EAASyC,SAAS/B,EAAKV,iBCZ1B,SAAS0C,IAAY,IAAD,EACTzB,mBAAS,IADA,mBAC1BP,EAD0B,KACpBiC,EADoB,OAED1B,mBAAS,UAFR,mBAE1BjB,EAF0B,KAEhB4C,EAFgB,KAI3BV,EAAWW,YAAYb,GAEvBZ,EAAWC,cAiBjB,OACE,eAAC,IAAD,CAAKE,MAAO,CAAEuB,OAAQ,qBAAtB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAIxB,MAAO,CAAEuB,OAAQ,oBAAqBE,UAAW,QAAhE,SACGd,EAASe,KAAI,SAACC,GAAD,OACZ,cAACnC,EAAD,CAAiBnB,KAAMsD,EAAEtD,KAAMoB,SAAUkC,EAAElD,SAAUD,UAAWmD,EAAEnD,UAAWD,GAAIoD,EAAEpD,IAAxEoD,EAAEpD,SAGjB,cAAC,IAAD,CAAKiD,KAAM,GAAX,SACE,eAAC,IAAMI,MAAP,CAAa5B,MAAO,CAAE6B,QAAS,QAAUC,SAAO,EAAhD,UACE,cAAC,IAAD,CAAOC,MAAO5C,EAAMiB,SAzBF,SAAC4B,GACzBZ,EAAQY,EAAEC,OAAOF,UAyBX,eAAC,IAAD,CAAQG,aAAa,SAASH,MAAOtD,EAAU2B,SAvB1B,SAAC2B,GAC5BV,EAAYU,IAsBN,UACE,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACE,cAAC,IAAD,CAAK7B,MAAM,MAAX,oBAEF,cAAC,IAAO4B,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACE,cAAC,IAAD,CAAK7B,MAAM,OAAX,sBAEF,cAAC,IAAO4B,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACE,cAAC,IAAD,CAAK7B,MAAM,OAAX,sBAGJ,cAAC,IAAD,CAAQ8B,QA/Ba,WAC3BxC,EAASQ,EAAcC,QAAQ3B,QAAQ,CACrCJ,GAAI+D,cACJjE,KAAMc,EACNV,SAAUA,EACVD,WAAW,KAEb4C,EAAQ,IACRC,EAAY,WAuBiCkB,KAAK,UAA5C,yB,aCnBKnE,cAAY,CACvBC,KAAM,UACNC,aAAc,CACVwC,OAAQ,GACRD,OAAQ,MACRpC,SAAU,IAEdC,SAAU,CACN8D,mBAAoB,SAAC5D,EAAOC,GAExBD,EAAMkC,OAASjC,EAAOE,SAE1B0D,mBAAoB,SAAC7D,EAAOC,GACxBD,EAAMiC,OAAShC,EAAOE,SAE1B2D,eAAgB,SAAC9D,EAAOC,GACpBD,EAAMH,SAAWI,EAAOE,YC5C5B4D,EAAWC,IAAXD,OAEO,SAASE,IAAW,IAAD,EACInD,mBAAS,IADb,mBACzBqB,EADyB,KACb+B,EADa,OAEQpD,mBAAS,OAFjB,mBAEzBqD,EAFyB,KAEXC,EAFW,OAGYtD,mBAAS,IAHrB,mBAGzBuD,EAHyB,KAGTC,EAHS,KAI1BrD,EAAWC,cAajB,OACE,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACE,eAAC,IAAD,CAAKyB,KAAM,GAAX,UACE,cAAC,IAAW2B,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,oBAKA,cAACV,EAAD,CAAQW,YAAY,oBAAoBvB,MAAOhB,EAAYX,SApBxC,SAAC4B,GACxBc,EAAcd,EAAEC,OAAOF,OACvBlC,EAAS0D,EAAa1E,OAAO2D,mBAAmBR,EAAEC,OAAOF,cAoBvD,eAAC,IAAD,CAAKyB,GAAI,GAAT,UACE,cAAC,IAAWL,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,8BAKA,eAAC,IAAMzB,MAAP,CAAaG,MAAOgB,EAAc3C,SAxBb,SAAC4B,GAC1BgB,EAAgBhB,EAAEC,OAAOF,OACzBlC,EAAS0D,EAAa1E,OAAO4D,mBAAmBT,EAAEC,OAAOF,SAsBrD,UACE,cAAC,IAAD,CAAOA,MAAM,MAAb,iBACA,cAAC,IAAD,CAAOA,MAAM,YAAb,uBACA,cAAC,IAAD,CAAOA,MAAM,OAAb,yBAGJ,eAAC,IAAD,CAAKyB,GAAI,GAAT,UACE,cAAC,IAAWL,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,gCAKA,eAAC,IAAD,CACEI,KAAK,WACLC,YAAU,EACVJ,YAAY,gBACZtD,MAAO,CAAE2D,MAAO,QAChB5B,MAAOkB,EACP7C,SAtCqB,SAAC2B,GAC5BmB,EAAkBnB,GAClBlC,EAAS0D,EAAa1E,OAAO+E,qBAAqB7B,KA8B9C,UAQE,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACE,cAAC,IAAD,CAAK7B,MAAM,MAAX,oBAEF,cAAC,IAAO4B,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACE,cAAC,IAAD,CAAK7B,MAAM,OAAX,sBAEF,cAAC,IAAO4B,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACE,cAAC,IAAD,CAAK7B,MAAM,OAAX,4B,IC9DJsD,EAAUC,IAAVD,MAyBOE,MAvBf,WACE,OACE,sBACE/D,MAAO,CACL2D,MAAO,IACPnD,OAAQ,SACRqB,QAAS,OACTmC,cAAe,SACfC,gBAAiB,QACjBC,QAAS,GACTC,UAAW,uBACXC,aAAc,EACd7C,OAAQ,QAVZ,UAaE,cAACsC,EAAD,CAAO7D,MAAO,CAAEqE,UAAW,UAA3B,iCACA,cAACxB,EAAD,IACA,cAAC,IAAD,IACA,cAAC1B,EAAD,QCHSmD,EAPDC,YAAe,CACzBC,QAAS,CACL5D,QAAS6D,EAAaD,QACtB7D,SAAUN,EAAcmE,WCZhCE,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.c4e50775.chunk.js","sourcesContent":["// const initState = [\r\n//     { id: 1, name: 'learnST', completed: false, priority: 'Medium' },\r\n//     { id: 2, name: 'learnST2', completed: true, priority: 'Low' },\r\n// ]\r\n\r\n\r\n// const todoReducer = (state = initState, action) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'todoList/addTodo':\r\n//             return [\r\n//                 ...state,\r\n//                 action.payload\r\n//             ]\r\n//         case 'todoList/toggleTodoStatus':\r\n//             return state.map(todo => todo.id === action.payload\r\n//                 ? { ...todo, completed: !todo.completed }\r\n//                 : todo)\r\n\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// export default todoReducer\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nexport default createSlice({\r\n    name: 'todoList',\r\n    initialState: [\r\n        { id: 1, name: 'learnST', completed: false, priority: 'Medium' },\r\n        { id: 2, name: 'learnST2', completed: true, priority: 'Low' },\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            // trong redux toolkit khi viết code mutation thì nó sẽ tự chuyển thành code immutability\r\n            state.push(action.payload)\r\n        },\r\n        toggleTodoStatus: (state, action) => {\r\n            const currentTodo = state.find(todo => todo.id === action.payload)\r\n            if (currentTodo) {\r\n                currentTodo.completed = !currentTodo.completed\r\n            }\r\n        }\r\n    }\r\n})","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport todoListSlice from '../TodoList/TodoListSlice';\r\n// import { toggleTodoStatus } from '../../redux/actions';\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, prioriry, completed, id }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch()\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(todoListSlice.actions.toggleTodoStatus(id))\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n        {prioriry}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from \"reselect\"\r\n\r\nexport const todoListSelector = (state) => state.todoList\r\nexport const statusFilterSelector = (state) => state.filters.status\r\nexport const searchTextSelector = (state) => state.filters.search\r\nexport const priorityFilterSelector = (state) => state.filters.priority\r\n\r\n\r\nexport const todosRemainingSelector = createSelector(todoListSelector, statusFilterSelector, searchTextSelector, priorityFilterSelector, (todoList, status, searchText, priority) => {\r\n    return todoList.filter((todo) => {\r\n        if (status === 'All') {\r\n            return priority.length\r\n                ? todo.name.includes(searchText) && priority.includes(todo.priority)\r\n                : todo.name.includes(searchText)\r\n        }\r\n        return todo.name.includes(searchText)\r\n            && (status === 'Completed'\r\n                ? todo.completed\r\n                : !todo.completed)\r\n            && (priority.length\r\n                ? priority.includes(todo.priority)\r\n                : true)\r\n    })\r\n})\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { todosRemainingSelector } from '../../redux/selectors'\r\nimport todoListSlice from './TodoListSlice'\r\n\r\nexport default function TodoList() {\r\n  const [todo, setTodo] = useState('')\r\n  const [priority, setPriority] = useState('Medium')\r\n\r\n  const todoList = useSelector(todosRemainingSelector)\r\n  // const searchText = useSelector(searchTextSelector)\r\n  const dispatch = useDispatch()\r\n  const handleInputChange = (e) => {\r\n    setTodo(e.target.value)\r\n  }\r\n  const handleSelectPriority = (value) => {\r\n    setPriority(value)\r\n  }\r\n  const handleAddButtonClick = () => {\r\n    dispatch(todoListSlice.actions.addTodo({\r\n      id: uuidv4(),\r\n      name: todo,\r\n      priority: priority,\r\n      completed: false\r\n    }))\r\n    setTodo('')\r\n    setPriority('Medium')\r\n  }\r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)' }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList.map((t) => (\r\n          <Todo key={t.id} name={t.name} prioriry={t.priority} completed={t.completed} id={t.id} />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n          <Input value={todo} onChange={handleInputChange} />\r\n          <Select defaultValue=\"Medium\" value={priority} onChange={handleSelectPriority}>\r\n            <Select.Option value='High' label='High'>\r\n              <Tag color='red'>High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Medium' label='Medium'>\r\n              <Tag color='blue'>Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Low' label='Low'>\r\n              <Tag color='gray'>Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button onClick={handleAddButtonClick} type='primary'>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","// const initState = {\r\n//     search: '',\r\n//     status: 'All',\r\n//     priority: []\r\n// }\r\n\r\n\r\n// const filtersReducer = (state = initState, action) => {\r\n\r\n//     switch (action.type) {\r\n//         case 'filters/searchFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 search: action.payload\r\n//             }\r\n//         case 'filters/statusFilterChange':\r\n//             return {\r\n//                 ...state,\r\n//                 status: action.payload\r\n//             }\r\n//         case 'filters/priorityChange':\r\n//             return {\r\n//                 ...state,\r\n//                 priority: action.payload\r\n//             }\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// export default filtersReducer\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nexport default createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        search: '',\r\n        status: 'All',\r\n        priority: [],\r\n    },\r\n    reducers: {\r\n        searchFilterChange: (state, action) => {\r\n            // trong redux toolkit khi viết code mutation thì nó sẽ tự chuyển thành code immutability\r\n            state.search = action.payload\r\n        },\r\n        statusFilterChange: (state, action) => {\r\n            state.status = action.payload\r\n        },\r\n        priorityChange: (state, action) => {\r\n            state.priority = action.payload\r\n        },\r\n    }\r\n})","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport filtersSlice from './FiltersSlice'\r\n// import { searchFilterChange, statusFilterChange, priorityFilterChange } from '../../redux/actions'\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const [searchText, setSearchText] = useState('')\r\n  const [filterStatus, setFilterStatus] = useState('All')\r\n  const [filterPriority, setFilterPriority] = useState([])\r\n  const dispatch = useDispatch()\r\n  const handleSearchText = (e) => {\r\n    setSearchText(e.target.value)\r\n    dispatch(filtersSlice.action.searchFilterChange(e.target.value))\r\n  }\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value)\r\n    dispatch(filtersSlice.action.statusFilterChange(e.target.value))\r\n  }\r\n  const handleFilterPriority = (value) => {\r\n    setFilterPriority(value)\r\n    dispatch(filtersSlice.action.priorityFilterChange(value))\r\n  }\r\n  return (\r\n    <Row justify='center'>\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search placeholder='input search text' value={searchText} onChange={handleSearchText} />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value='All'>All</Radio>\r\n          <Radio value='Completed'>Completed</Radio>\r\n          <Radio value='Todo'>To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode='multiple'\r\n          allowClear\r\n          placeholder='Please select'\r\n          style={{ width: '100%' }}\r\n          value={filterPriority}\r\n          onChange={handleFilterPriority}\r\n        >\r\n          <Select.Option value='High' label='High'>\r\n            <Tag color='red'>High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Medium' label='Medium'>\r\n            <Tag color='blue'>Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Low' label='Low'>\r\n            <Tag color='gray'>Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// ============ Redux core ===================\r\n// import { legacy_createStore as createStore } from \"redux\";\r\n// import rootReducer from \"./reducer\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// const composedEnhancers = composeWithDevTools()\r\n// const store = createStore(rootReducer, composedEnhancers)\r\n\r\n// export default store\r\n\r\n// --------- reduxjs toolkit -------------\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport FiltersSlice from '../components/Filters/FiltersSlice'\r\nimport todoListSlice from '../components/TodoList/TodoListSlice'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        filters: FiltersSlice.reducer,\r\n        todoList: todoListSlice.reducer,\r\n    }\r\n})\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}